-	serialPort(self, serialPort, serialBaud, plotLength, numPlot)
    : default value 초기화 하기  ex) self.isRun =true
    : port 연결 상태를 보여준다.  연결이 잘 되었으면 readSerialPort() , 연결이 안되었으면 프로그램을 종료시킨다.

-	readSerialPort()
    : (backgroundThread) thread을 만든다.
      backgroudThread에서 isReceving이 True로 바꿀때까지 time.sleep(1.0)을 해서 데이터를 받을 때 조금씩 쉬어가면서 상황을 기다린다.

-	backgroundThread()
   : 데이터 검색을 위한 버퍼 시간을 제공하기 위해 time.sleep(1)을 해준다.
     그 다음 serialConnect.read()에서 line에 append해준다. 개행문자인 10이 오면,
     데이터를 파싱( parsing_data() )하고 print()해서 현재 들어온 데이터를 콘솔에 보여준다.
     그 다음 line을 모두 지워버려서 오버 플로우를 방지한다. serialConnect.read()을 읽으면서,
     TXS_ 나 Send confirm message(A,F)가 오면 serialConnect.write()을 하여 시리얼에게 데이터를
     전송하여, 센서 측정을 시작하거나 종료 시키고, 시작하면 sensorBool을 true로 바꾸고,
     종료하면 sensorBool을 false로 바꾸어준다. sensorBool value을 이용하여,
     필요한 센서 데이터만 파싱하여 list에 저장한다. Sensor_parsing_data()을 이용한다.

-	getSerialData(self, frame, lines, lineValueText, lineLabel, timeText)
   : list에서 있는 데이터를 readSensorDataFormat()을 이용하여 데이터를 변환한 다음,
     matplotlib에 그래프를 보여준다. Lines는 각 xy그래프 마다 set_data()하여 그래프를 정의한다.
     lineValueText는 현재 들어오고 있는 값들을 보여준다. timeText는 들어오는 데이터의 시간(ms)을 보여준다.
